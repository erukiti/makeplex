■

  * 待ちは1つのみ存在する
  * 頭は1つのみ存在する
    ※頭かつ待ちも、頭と待ちも、両方ありうる

  * シュンツは連番三枚 (ただし1と9は端っこ。"912"みたいなパターンはなし)
  * コーツは同じ数字三枚

  * 牌の組み合わせは以下の通り

    頭の待ちは、
    [1][2][3][4][5][6][7][8][9]

    頭は、
    (11)(22)(33)(44)(55)(66)(77)(88)(99)

    メンツの待ちは
    [12][23][34][45][56][67][78][89][13][24][35][46][57][68][79]
    [11][22][33][44][55][66][77][88][99]

    メンツは
    (111)(222)(333)(444)(555)(666)(777)(888)(999)
    (123)(234)(345)(456)(567)(678)(789)

  * 存在しうる組み合わせは以下の通り
    - 待ち頭 + メンツ4 つ
    - 頭 + 待ちメンツ1つ + メンツ3つ

■処理の流れ

1. まずは頭が待ちなケース
   1-1. 頭な待ちを作る
   1-2. 既に待ちは消費されてるので、メンツを4つ探すだけ

2. 頭が待ちじゃないケース
   2-1. 頭を作る
   2-2. メンツの待ちを作る
   2-3. 待ちが消費されたので、メンツを3つ探す

頭探索やメンツ探索は1から順に再帰的に処理していく

※途中絶対駄目なパターンが出来たら、それを検出してショートカット出来ればばっちり
※だが、面倒なので、今回はそれは実装せず

■サンプル

1112224588899 :
単純なケースです。45を軸にする両面の待ちなので、
(111)(222)(888)(99)[45]
 
1122335556799q :
“99”をアタマの両面か“55”“99”のシャボであるので、
(123)(123)(555)(99)[67]
(123)(123)(55)(567)[99]
(123)(123)(99)(567)[55]

1112223335559 :
待ちは“9”単騎ですが、
(123)(123)(123)(555)[9]
(111)(222)(333)(555)[9]

1223344888999 :
1-4の“ノベタン”待ちですが、4をアタマにしての[23]待ちと、1単騎、4単騎で3個の答えになります。
[1](234)(234)(888)(999)
(123)(234)[4](888)(999)
(123)[23](44)(888)(999)



1112345678999 :
「九蓮宝燈」という役です。1～9すべてが待ちになっています。これに正しく答えが出るのであれば、プログラムはほぼ正しいでしょう。
(11)(123)(456)(789)[99]
[11](123)(456)(789)(99)

(111)[2](345)(678)(999)

(11)[12](345)(678)(999)
(11)(123)[45](678)(999)

(111)[23](456)(789)(99)
(111)(234)[56](789)(99)

・・・ちゅーれんは面倒なので組み合わせは確かめてないが、おそらく11パターンで合っているはず
